#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

PREFIX="${GREEN}[HOOKS]${NC}"
FAILURE="${RED}FAILED${NC}"
WARNING="${YELLOW}[WARNING]${NC}"
SKIPPED="${YELLOW}SKIPPED${NC}"
SUCCESS="${GREEN}ok${NC}"

printf "${PREFIX} Clean working copy ... "
git diff --exit-code &>/dev/null
if [ "$?" == 0 ]; then
    printf "${SUCCESS}\n"
else
    if [ "${ALLOW_DIRTY}" == "1" ]
    then
        printf "${SKIPPED}\n"
    else
        printf "${FAILURE}\n"
        exit 1
    fi
fi

PREPUSH_RESULT=0

try_run() {
    TEXT=$1
    shift
    printf "${PREFIX} ${TEXT}"
    OUTPUT=$($@ 2>&1)
    if [ "$?" != "0" ]; then
        printf "${FAILURE}, output shown below\n"
        printf "\n\n"
        printf "$OUTPUT"
        printf "\n\n"
		PREPUSH_RESULT=1
        return 1
    else
        printf "${SUCCESS}\n"
    fi
}

TOOLCHAIN_RESULT=0
check_toolchain() {
    printf "${PREFIX} Checking for $1 toolchain ... "
    if [[ $(rustup toolchain list) =~ $1 ]]; then
        printf "${SUCCESS}\n"
    else
        TOOLCHAIN_RESULT=1
        PREPUSH_RESULT=1
        printf "${FAILURE}\n"
    fi
}

printf "${PREFIX} Checking for rustup or current toolchain directive... "
command -v rustup &>/dev/null
if [ "$?" == 0 ]; then
    printf "${SUCCESS}\n"

    check_toolchain nightly
    if [ ${TOOLCHAIN_RESULT} == 1 ]; then
        exit 1
    fi

    try_run "Building ... " cargo +stable build --color=always
    try_run "Testing ... " cargo +stable test --color=always
    try_run "Testing with all features enabled ... " cargo +stable test --all-features --color=always
    for EXAMPLE in $(cargo +stable run --example 2>&1 | grep '    ' | awk '{print $1}')
    do
        try_run "Running example \"$EXAMPLE\" ... " cargo +stable run --example $EXAMPLE
    done

fi

exit $PREPUSH_RESULT
