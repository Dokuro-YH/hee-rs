#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

PREFIX="${GREEN}[HOOKS]${NC}"
FAILURE="${RED}FAILED${NC}"
WARNING="${RED}[WARNING]${NC}"
SKIPPED="${YELLOW}SKIPPED${NC}"
SUCCESS="${GREEN}ok${NC}"

if git rev-parse --verify HEAD &>/dev/null
then
    against=HEAD
else
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

FAILED=0

printf "${PREFIX} Checking that all filenames are ascii ... "
if test $(git diff --cached --name-only --diff-filter=A -z $against | LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    FAILED=1
    printf "${FAILURE}\n"
else
    printf "${SUCCESS}\n"
fi

printf "${PREFIX} Checking for bad whitespace ... "
git diff-index --check --cached $against -- &>/dev/null
if [ "$?" != 0 ]; then
    FAILED=1
    printf "${FAILURE}\n"
else
    printf "${SUCCESS}\n"
fi

printf "${PREFIX} Checking formatting ... "
command -v cargo fmt &>/dev/null
if [ $? != 0 ]; then
    FAILED=1
    printf "${FAILURE}\n"
    printf "run `rustup component add rustfmt` install rustfmt tool\n"
fi

diff="$diff$(cargo fmt -- --check)"
if [ "${SKIP_RUSTFMT}" == 1 ]; then
    printf "${SKIPPED}\n"$?
elif [ -n "$diff" ]; then
    FAILED=1
    printf "${FAILURE}\n"
    echo "$diff" | sed 's/Using rustfmt config file.*$/d/'
else
    printf "${SUCCESS}\n"
fi

exit ${FAILED}
